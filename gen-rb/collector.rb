#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'gen-rb/collector_types'

module Collector
  class Client
    include ::Thrift::Client

    def report(reportAttributes)
      send_report(reportAttributes)
      recv_report()
    end

    def send_report(reportAttributes)
      send_message('report', Report_args, :reportAttributes => reportAttributes)
    end

    def recv_report()
      result = receive_message(Report_result)
      return
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_report(seqid, iprot, oprot)
      args = read_args(iprot, Report_args)
      result = Report_result.new()
      @handler.report(args.reportAttributes)
      write_result(result, oprot, 'report', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Report_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    REPORTATTRIBUTES = 1

    FIELDS = {
      REPORTATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'reportAttributes', :class => ::ReportAttributes}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Report_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

