#
# Autogenerated by Thrift Compiler (1.0.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

class RemoteCommandReponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RECIEVEDCOMMAND = 1
  STATUS = 2

  FIELDS = {
    RECIEVEDCOMMAND => {:type => ::Thrift::Types::BYTE, :name => 'recievedCommand'},
    STATUS => {:type => ::Thrift::Types::BYTE, :name => 'status'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recievedCommand is unset!') unless @recievedCommand
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field status is unset!') unless @status
  end

  ::Thrift::Struct.generate_accessors self
end

class LocalCommandRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COMMAND = 1
  PAYLOAD = 2

  FIELDS = {
    COMMAND => {:type => ::Thrift::Types::BYTE, :name => 'command'},
    PAYLOAD => {:type => ::Thrift::Types::STRING, :name => 'payload', :binary => true, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field command is unset!') unless @command
  end

  ::Thrift::Struct.generate_accessors self
end

class LocalCommandResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COMMAND = 1
  PAYLOAD = 2

  FIELDS = {
    COMMAND => {:type => ::Thrift::Types::BYTE, :name => 'command'},
    PAYLOAD => {:type => ::Thrift::Types::STRING, :name => 'payload', :binary => true, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field command is unset!') unless @command
  end

  ::Thrift::Struct.generate_accessors self
end

class Address
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ALIASADDRESS = 1
  IEEEADDRESS = 2
  NETWORKADDRESS = 3

  FIELDS = {
    ALIASADDRESS => {:type => ::Thrift::Types::STRING, :name => 'aliasAddress', :optional => true},
    IEEEADDRESS => {:type => ::Thrift::Types::STRING, :name => 'ieeeAddress', :binary => true, :optional => true},
    NETWORKADDRESS => {:type => ::Thrift::Types::STRING, :name => 'networkAddress', :binary => true, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RemoteCommandRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DESTINATIONADDRESSMODE = 1
  DESTINATIONADDRESS = 2
  TRANSACTIONSEQNO = 3
  COMMAND = 4
  PAYLOAD = 5

  FIELDS = {
    DESTINATIONADDRESSMODE => {:type => ::Thrift::Types::BYTE, :name => 'destinationAddressMode'},
    DESTINATIONADDRESS => {:type => ::Thrift::Types::STRUCT, :name => 'destinationAddress', :class => ::Address},
    TRANSACTIONSEQNO => {:type => ::Thrift::Types::BYTE, :name => 'transactionSeqNo'},
    COMMAND => {:type => ::Thrift::Types::BYTE, :name => 'command'},
    PAYLOAD => {:type => ::Thrift::Types::STRING, :name => 'payload', :binary => true, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field destinationAddressMode is unset!') unless @destinationAddressMode
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field destinationAddress is unset!') unless @destinationAddress
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field transactionSeqNo is unset!') unless @transactionSeqNo
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field command is unset!') unless @command
  end

  ::Thrift::Struct.generate_accessors self
end

class IndicationCommandRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SOURCEADDRESSMODE = 1
  SOURCEADDRESS = 2
  LINKQUALITY = 3
  TRANSACTIONSEQNO = 4
  COMMAND = 5
  PAYLOAD = 6

  FIELDS = {
    SOURCEADDRESSMODE => {:type => ::Thrift::Types::BYTE, :name => 'sourceAddressMode'},
    SOURCEADDRESS => {:type => ::Thrift::Types::STRUCT, :name => 'sourceAddress', :class => ::Address},
    LINKQUALITY => {:type => ::Thrift::Types::BYTE, :name => 'linkQuality'},
    TRANSACTIONSEQNO => {:type => ::Thrift::Types::BYTE, :name => 'transactionSeqNo'},
    COMMAND => {:type => ::Thrift::Types::BYTE, :name => 'command'},
    PAYLOAD => {:type => ::Thrift::Types::STRING, :name => 'payload', :binary => true, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceAddressMode is unset!') unless @sourceAddressMode
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceAddress is unset!') unless @sourceAddress
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field linkQuality is unset!') unless @linkQuality
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field transactionSeqNo is unset!') unless @transactionSeqNo
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field command is unset!') unless @command
  end

  ::Thrift::Struct.generate_accessors self
end

class ReportCommandRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PAN_ID = 1
  SOURCENETWORKADDRESS = 2
  SOURCEIEEEADDRESS = 3
  DEVICEID = 4
  DATA = 5

  FIELDS = {
    PAN_ID => {:type => ::Thrift::Types::STRING, :name => 'pan_id', :binary => true},
    SOURCENETWORKADDRESS => {:type => ::Thrift::Types::STRING, :name => 'sourceNetworkAddress', :binary => true},
    SOURCEIEEEADDRESS => {:type => ::Thrift::Types::STRING, :name => 'sourceIEEEAddress', :binary => true},
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId', :binary => true},
    DATA => {:type => ::Thrift::Types::STRING, :name => 'data', :binary => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field pan_id is unset!') unless @pan_id
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceNetworkAddress is unset!') unless @sourceNetworkAddress
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceIEEEAddress is unset!') unless @sourceIEEEAddress
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field deviceId is unset!') unless @deviceId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field data is unset!') unless @data
  end

  ::Thrift::Struct.generate_accessors self
end

